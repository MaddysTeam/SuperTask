@model Payments
@{
	var project = ViewData["project"] as Project;
	var canEdit =!project.IsCompleteStatus && !Model.IsConfirm ;
}
<div class="row form-group">
	@Html.HiddenFor(p => p.PayId, new { @class = "payId" })
	@Html.HiddenFor(p => p.ProjectId, new { @class = "projectId" })
	@Html.HiddenFor(p => p.PayName, new { @class = "payName" })
	@Html.HiddenFor(p => p.PayType, new { @class = "payType" })
	@Html.HiddenFor(p => p.Sort, new { @class = "sort" })

	<div class="col-md-1 col-md-offset-1">@Html.Label(Model.PayName, new { @class = "control-label" })</div>
	<div class="col-md-1">
		@if (canEdit)
		{
			@Html.TextBoxFor(p => p.Money, new { @class = "form-control money" })
		}
		else
		{
			@Html.HiddenFor(p => p.Money, new { @class = "sort" })
			@Html.Label("", Model.Money.ToString(), new { @class = "form-control",@readonly = "readonly" })
		}

	</div>
	<div class="col-md-1">@Html.Label("Ratio", Model.Ratio, new { @id= "Ratio", @class = "form-control" , @readonly = "readonly" })</div>
	<div class="col-md-1">@Html.LabelFor(p => p.InvoiceDate, new { @class = "control-label" })</div>
	<div class="col-md-2">
			@if (canEdit)
			{
				<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
					@Html.TextBoxFor(p => p.InvoiceDate, "{0:yyyy-MM-dd}", new { @class = "form-control invoiceDate", @hasValue = Model.InvoiceDate != DateTime.MinValue })
					<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
				</div>
			}
			else
			{
				@Html.HiddenFor(p => p.InvoiceDate, new { @class = "sort" })
				@Html.Label("", Model.InvoiceDate.ToString("yyyy-MM-dd"), new { @class = "form-control", @readonly = "readonly" })
			}
		</div>

	<div class="col-md-1">@Html.LabelFor(p => p.PayDate, new { @class = "control-label" })</div>
	<div class="col-md-2">
	
			@if (canEdit)
			{
				<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
					@Html.TextBoxFor(p => p.PayDate, "{0:yyyy-MM-dd}", new { @class = "form-control", @hasValue = Model.PayDate != DateTime.MinValue })
					<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
				</div>
			}
			else
			{
				@Html.HiddenFor(p => p.PayDate, new { @class = "sort" })
				@Html.Label("", Model.PayDate.ToString("yyyy-MM-dd"), new { @class = "form-control", @readonly = "readonly" })
			}
	</div>
	<div class="col-md-2">
		
		@if (canEdit)
		{
			<a class="btn btn-pay" title="保存"> <i class="fa fa-save"></i></a>
			if (project.IsProcessStatus && !Model.IsConfirm)
			{
				<a class="btn btn-danger btn-confirm-pay" title="最终确认" data-confirm="true" hidden><i class="fa fa-"></i>最终确认</a>
			}
			//if (Model.Valiedate().IsSuccess)
			//{
				<a class="btn btn-clear" title="清除并删除节点任务"> <font color="red"><i class="fa fa-times-circle-o"></i></font></a>
			//}
		}

	</div>
</div>