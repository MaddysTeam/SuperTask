@model Payments
<div class="row form-group">
	@Html.HiddenFor(p => p.PayId, new { @class = "payId" })
	@Html.HiddenFor(p => p.ProjectId, new { @class = "projectId" })
	@Html.HiddenFor(p => p.PayType, new { @class = "payType" })

	<div class="col-md-1">@Html.Label("名称", new { @class = "control-label" })</div>
	<div class="col-md-2">@Html.TextBoxFor(p => p.PayName, new { @class = "form-control payName" })</div>
	<div class="col-md-1">@Html.Label("协作金额", new { @class = "control-label" })</div>
	<div class="col-md-1">@Html.TextBoxFor(p => p.Money, new { @class = "form-control money" })</div>
	<div class="col-md-1">@Html.LabelFor(p=>p.PayDate,new {@class= "control-label" })</div>
	<div class="col-md-2">
		<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
			@Html.TextBoxFor(p => p.PayDate, "{0:yyyy-MM-dd}", new { @class = "form-control payDate", @hasValue = Model!=null && Model.PayDate != DateTime.MinValue })
			<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
		</div>
	</div>
	<div class="col-md-2"><a class="btn btn-pay" title="保存"><i class="fa fa-save"></i></a>
	@if (Model == null)
	{
		<a class="btn btn-removePay"> <font color="red"><i class="fa fa-minus-circle"></i></font></a>
	}
	else {
	<a class="btn  btn-addInternalVender"><font color="#3c763d"><i class="fa fa-plus-circle"></i></font></a>
	}
	</div>
</div>