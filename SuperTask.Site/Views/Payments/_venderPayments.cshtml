@model Payments
@{
	var project = ViewData["project"] as Project;
	var canEdit = project.IsPlanStatus || project.IsEditStatus || project.CreateDate < DateTime.Parse("2019-02-01");
}
<div class="row form-group @Model.PayId">
	@Html.HiddenFor(p => p.PayId, new { @class = "payId" })
	@Html.HiddenFor(p => p.ProjectId, new { @class = "projectId" })
	@Html.HiddenFor(p => p.PayType, new { @class = "payType" })
	@Html.HiddenFor(p => p.Sort, new { @class = "sort" })
	@Html.HiddenFor(p => p.IsConfirm, new { @class = "isConfirm" })
	@Html.HiddenFor(p => p.ParentId, new { @class = "parentId" })

	@if (Model.ParentId.IsEmpty())
	{
		<div class="col-md-1 col-md-offset-1">@Html.Label("名称", new { @class = "control-label" })</div>
		if (canEdit)
		{
			<div class="col-md-2">@Html.TextBoxFor(p => p.PayName, new { @class = "form-control payName" })</div>
		}
		else
		{
			<div class="col-md-2">@Html.Label("", Model.PayName, new { @class = "form-control" })</div>
		}
	}
	else
	{
		@Html.HiddenFor(p => p.PayName, new { @class = "payName" })
		<div class="col-md-1 col-md-offset-3"></div>
	}

	<div class="col-md-1">@Html.Label("协作金额", new { @class = "control-label" })</div>
	<div class="col-md-1">@Html.TextBoxFor(p => p.Money, new { @class = "form-control money" })</div>
	<div class="col-md-1">@Html.LabelFor(p => p.PayDate, new { @class = "control-label" })</div>
	<div class="col-md-2">
		@if (canEdit)
		{
			<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
				@Html.TextBoxFor(p => p.PayDate, "{0:yyyy-MM-dd}", new { @class = "form-control payDate", @hasValue = Model != null && Model.PayDate != DateTime.MinValue })
				<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
			</div>
		}
		else
		{
			@Html.Label("", Model.PayDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
		}
	</div>
	<div class="col-md-2">
		@if (canEdit)
		{
			<a class="btn btn-pay" title="保存"><i class="fa fa-save"></i></a>
			if (!Model.PayId.IsEmpty() && Model.ParentId.IsEmpty())
			{
				<a class="btn btn-addMoney btn-addVender" data-id="@Model.PayId" data-parentId="@Model.ParentId"><font color="#3c763d"><i class="fa fa-plus-circle"></i></font></a>
			}
			<a class="btn btn-removePay"> <font color="red"><i class="fa fa-minus-circle"></i></font></a>
		}
	</div>
</div>