@model Require
@{
	//var users = ViewBag.Users as List<UserInfo>;
	//var manager =users.Find(x => x.UserId == Model.ManagerId);
	var attahcments = ViewBag.Attahcments as List<Attachment>;
}

<style>
	.dropzonePop {
		display: none;
	}
</style>

@section Css{
	<link href="~/assets/plugins/jquery.searchableSelect/css/jquery.searchableSelect.css" rel="stylesheet" />
}

<div class="row" style="margin-top:20px;margin-bottom:20px;">
	<a class="btn btn-lg btn-danger col-md-1 col-md-offset-1" href="@Url.Action("List","Require")">返回列表</a>
	<div class="col-md-3">
		<h5>@Model.SortId - @Model.Level - @Model.ProjectName - @Model.RequireName</h5>
	</div>

	<div class="buttons col-md-4">
		@if (Model.IsWaitingForReview)
		{
			<a class="btn btn-danger" id="emergencyReview" data-url="@Url.Action("Hurryup", "Require", new { id = Model.RequireId })">加急审批</a>
		}
		 @if (Model.CanReview(Html.GetUserProfile().UserId))
		{
		<a class="btn btn-info" id="review" data-url="@Url.Action("Review", "Require", new { id = Model.RequireId })">评审</a>
		}
		<a class="btn btn-success" id="task" data-url="@Url.Action("Add", "TaskV2",new { requireId = Model.RequireId , projectId=Model.Projectid})">创建任务</a>
		<a class="btn btn-warning " href="@Url.Action("Edit", "Require", new { id = Model.RequireId })">修改</a>

	</div>
</div>
<div class="row">

	<!-- widget -->
	<div class="widget details col-md-7 col-md-offset-1">

		<form id="taskForm" class="form-horizontal" action="@Url.Action("EditDetail","TaskV2")" role="form" data-after-success="afterDialogSuccess()" style="">

			<div class="widget-content">

				<div class="row editTaskInfo">
					@Html.HiddenFor(t => t.Projectid)
					@Html.HiddenFor(t => t.SortId)
					@Html.HiddenFor(t => t.RequireId)
					<div class="form-group">
						@Html.LabelFor(t => t.RequireName, new { @class = "control-label col-md-2" })
						<div class="col-md-9">
							@Html.Label(Model.RequireName, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.RequireStatus, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.Status, new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.ManagerId, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.Manager, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.RequireSource, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label("", new { @class = "form-control" })
						</div>
						@Html.LabelFor(x => x.CreateDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.CreateDateStr, new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.ReviewDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EvalDateStr, new { @class = "form-control" })
						</div>

						@Html.LabelFor(x => x.EstimateEndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EstimateEndDateStr, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(x => x.WorkHours, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.WorkHours.ToString(), new { @class = "form-control" })
						</div>

						@Html.LabelFor(x => x.CloseDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.CloseDateStr, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(x => x.StartDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.StartDateStr, new { @class = "form-control" })
						</div>

						@Html.LabelFor(x => x.EndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EndDateStr, new { @class = "form-control" })
						</div>
					</div>
					<div class="form-group @(Model.IsWaitingForReview|| Model.IsHurry? "hidden":"")">
						@Html.LabelFor(x => x.WorkHours, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							<a id="handle" href="#" data-url="@Url.Action("Handle", "Require",new { id=Model.RequireId})"><i class="fa fa-clock-o" style="font-size:22px"></i></a>
						</div>
					</div>

					<div class="col-md-12">
						@Html.LabelFor(t => t.Description, new { @class = "control-label" })
						<p></p>
						<div class="alert alert-success" style="overflow:auto">@Html.Raw(Model.Description)</div>
						@*@Html.TextArea("", Html.Raw(Model.Description).ToString(), 12, 2, new { @class = "form-control", @readonly = "readonly" })*@
					</div>
					<div class="col-md-12">
						@Html.LabelFor(t => t.StandardContent, new { @class = "control-label" })
						<p></p>
						<div class="alert alert-success">@Html.Raw(Model.StandardContent)</div>
					</div>


					<div class="col-md-12">
						@Html.Label("附件", new { @class = "control-label" })
						<p></p>
						<div class="alert alert-info alert-dismissable">
							@foreach (var item in attahcments)
							{
								<div><a href="@item.Url">@item.RealName</a></div>
							}
						</div>
					</div>

				</div>

			</div>

		</form>


	</div>

	@Html.Partial("_taskList", Model.RelativeTasks)
	@Html.Partial("_bugList", Model.RelativeBugs)
	@Html.Partial("_publishList", Model.RelativePublishs)

	@Html.Partial("_operation", Model.OperationHistory)

</div>
@section Plugins{
	<script src="~/assets/plugins/jquery.searchableSelect/js/jquery.searchableSelect.js"></script>
}
@section Modals{
	<button class="btn btn-md btn-custom-primary hidden" id="modelProxy" data-toggle="ajax-modal" data-target="#firstModal">代理</button>
	<!-- Modal start -->
	<div class="modal fade" id="firstModal" tabindex="-1" role="dialog" aria-labelledby="firstModalLabel" aria-hidden="true">
	</div>
	<!-- Modal end -->
}
@section Scripts{
	<script>

		$(function () {

			$('#review,#emergencyReview,#task,#handle').on('click', function () {
				var url = $(this).data('url');
				var $proxy = $('#modelProxy');
				$proxy
					.data('url', url)
					.trigger('click');
			});

		});

	</script>
}