@model Require
@{
	var attahcments = ViewBag.Attahcments as List<Attachment>;
	var ccUserIds = Model.CC?.Split(',');
}
<link href="~/assets/plugins/select2-4.0.2/css/select2.min.css" rel="stylesheet" />
<style>
	.dropzonePop {
		display: none;
	}
	.modal-header{margin-bottom:15px;}
</style>

<div class="row" style="margin-top:20px;margin-bottom:20px;">
	<a class="btn btn-lg btn-danger col-md-1 col-md-offset-1" href="@Url.Action("List","Require")">返回列表</a>
	<div class="col-md-6">
		<h4>@Model.SortId - @Model.Level - @Model.RequireName</h4>
	</div>
</div>
	<div class="row">

		<!-- widget -->
		<div class="widget details col-md-7 col-md-offset-1">

			<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone file"></form>

			<form id="RequireForm" class="form-horizontal" action="@Url.Action("Edit","Require")" role="form" data-after-success="afterDialogSuccess()" style="">

				<div class="widget-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
						<h4>编辑需求</h4>
					</div>
					<div class="row editTaskInfo">
						<fieldset class="col-sm-12">

							@Html.HiddenFor(t => t.SortId)
							@Html.HiddenFor(t => t.RequireId)
							@Html.HiddenFor(x => x.RequireStatus)
							@Html.HiddenFor(t => t.CreatorId)
							@Html.HiddenFor(t => t.CreateDate)
							@Html.HiddenFor(t=>t.CC)
							@Html.HiddenFor(t=>t.IsHurry)

							<div class="form-group">
								@Html.LabelFor(t => t.ProjectName, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									@Html.DropDownListFor(t => t.Projectid,
									SelectListHelper.GetSelectItems(ViewBag.Projects as List<Project>, "ProjectName", "ProjectId", null, SelectListHelper.Default),
									new { @class = "form-control dropdown-project" })
								</div>
								@Html.ValidationMessageFor(t => t.Projectid)
							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.RequireName, new { @class = "control-label col-md-2" })
								<div class="col-md-9">
									@Html.TextBoxFor(t => t.RequireName, new { @class = "form-control", @placeholder = "需求名称" })
								</div>
								@Html.ValidationMessageFor(t => t.RequireName)
							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.Manager, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									@Html.DropDownList("ManagerId",
									SelectListHelper.GetSelectItems(ViewBag.Users as List<UserInfo>, "UserName", "UserId", v => v.ToString() == Model.ManagerId.ToString(), SelectListHelper.Default),
									new { @class = "form-control" })
								</div>
								@Html.ValidationMessageFor(t => t.ManagerId)

								@Html.LabelFor(t => t.RequireSource, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									@Html.DropDownListFor(t => t.RequireSource,
									DictionaryCache.Cached(RequireKeys.SourceGuid)
													.GetSelectListById(Guid.Empty, SelectListHelper.Default),
									new { @class = "form-control dropdown-taskLevel" })
								</div>

							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.RequireLevel, new { @class = "control-label col-md-2	" })
								<div class="col-md-3">
									@Html.DropDownListFor(t => t.RequireLevel,
									DictionaryCache.Cached(RequireKeys.LevelGuid)
													.GetSelectListById(Guid.Empty),
									new { @class = "form-control dropdown-taskLevel" })
								</div>
								@Html.LabelFor(t => t.EstimateEndDate, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
										@Html.TextBoxFor(t => t.EstimateEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control endDate" })
										<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
									</div>
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.ReviewerId, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									@Html.DropDownListFor(x => x.ReviewerId,
									SelectListHelper.GetSelectItems(ViewBag.Users as List<UserInfo>, "UserName", "UserId", null, SelectListHelper.Default),
									new { @class = "form-control" })
								</div>

								@Html.LabelFor(t => t.CC, new { @class = "control-label col-md-2" })
								<div class="col-md-3">

									<select id="ccUsers" class="form-control new-select" multiple="multiple">
										@foreach (var user in ViewBag.Users as List<UserInfo>)
										{
											if (ccUserIds!=null && ccUserIds.Contains(user.UserId.ToString()))
											{
												<option value="@user.UserId" selected>@user.RealName</option>
}
											else
											{
											<option value="@user.UserId">@user.RealName</option>
}
										}

									</select>

								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.Description, new { @class = "control-label col-md-2" })
								<div class="col-md-9">
									@Html.TextAreaFor(t => t.Description, 12, 2, new { @class = "form-control" })
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(t => t.StandardContent, new { @class = "control-label col-md-2" })
								<div class="col-md-9">
									@Html.TextAreaFor(t => t.StandardContent, 6, 2, new { @class = "form-control" })
								</div>
							</div>

							<div class="form-group">
								@Html.HiddenFor(t => t.CurrentAttachment.RealName, new { @class = "fileName" })
								@Html.HiddenFor(t => t.CurrentAttachment.Url, new { @class = "filePath" })
								<label class="col-md-2 control-label">上传文件</label>
								<div class="col-md-5">
									<input style="visibility:hidden;position:absolute;" />
									<div class="input-group">
										<label id="uploadName" class="form-control oversize uploadName"></label>
										<span class="input-group-btn">
											<button class="btn btn-danger" type="button" id="btn-upload">附件上传</button>
										</span>
									</div>
								</div>
							</div>

							@if (attahcments != null && attahcments.Count > 0)
							{
								<div class="form-group">
									@Html.Label("已上传", new { @class = "control-label col-md-2" })
									<div class="col-md-9">
										@foreach (var item in attahcments)
										{
											<div><a href="@item.Url">@item.RealName</a></div>
}
									</div>
								</div>
							}

							<div class="form-group">
								@Html.LabelFor(t => t.StartDate, new { @class = "control-label col-md-2	" })
								<div class="col-md-3">
									<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
										@Html.TextBoxFor(t => t.StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control endDate" })
										<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
									</div>
								</div>
								@Html.LabelFor(t => t.EndDate, new { @class = "control-label col-md-2" })
								<div class="col-md-3">
									<div class="input-group date" data-provide="datepicker" data-date-language="zh-CN" data-date-format="yyyy-mm-dd" data-date-autoclose="true">
										@Html.TextBoxFor(t => t.EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control endDate" })
										<div class="input-group-addon"><i class="fa fa-calendar"></i></div>
									</div>
								</div>
							</div>

							<div class="input-group center-block">
								<button id="submit" class="btn btn-info col-md-3 col-md-offset-2 btn-custom-primary">保存</button>
								<a class="btn btn-info col-md-3" href="@Url.Action("List","Require")">取消</a>
							</div>

						</fieldset>

					</div>

				</div>

			</form>

		</div>

		@Html.Partial("_taskList",Model.RelativeTasks)
		@Html.Partial("_bugList", Model.RelativeBugs)
		@Html.Partial("_publishList", Model.RelativePublishs)

	</div>

@section Scripts{

	<script src="~/assets/plugins/ckeditor_4.14.1_standard/ckeditor/ckeditor.js"></script>
	<script src="~/assets/plugins/select2-4.0.2/js/select2.min.js"></script>

	<script>

		$(function () {

			ajaxSubmitForm($('#RequireForm'), true);

			//initial ckeditor
			var myEditor = initCKEditor('Description', { height: 200 });
			var myEditor2 = initCKEditor('StandardContent', { height: 200 });

			$('#submit').click(function () {
				$('#CC').val($('#ccUsers').val());
				$('#Description').val(myEditor.getData());
				$('#StandardContent').val(myEditor2.getData());
			});



			//bind files uploader
			$('.dropzone.file').dropzone({
				addedContainer: '#flyArea',
				dictResponseError: '上传出错',
				uploadMultiple: false,
				maxFilesize: 200,
				init: function () {
					this.on('success', function (file, data) {
						$('.fileName').val(data.filename);
						$('.filePath').val(data.url);
						setTimeout(function () { $('#uploadName').html(data.filename); }, 1000);
					});
					this.on('error', function (file, message) {
						popupMessage({ result: 'error', msg: message });
					});
				}
			});

			$('#btn-upload').click(function () {
				$('.dropzone.file').trigger('click');
			});


			$('#ccUsers').select2({
				placeholder: "请选择"
			});

		});


		function afterDialogSuccess() {
			//$('#firstModal').modal('hide');
			//$('#childTaskgrid').bootgrid('reload');
			//alert();
		}

		function bindMulitSelection(dropdown) {
			$(dropdown).select2({
				language: {
					noResults: function (param) {
						return "暂无数据";
					}
				}
			});
		}


	</script>

}

