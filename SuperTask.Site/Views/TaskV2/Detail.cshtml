@model WorkTask
@{
//Layout = null;

//var resourceSelectList = (ViewBag.Resource as List<Account>).Select(x => new SelectListItem { Text = x.UserName, Value = x.UserId.ToString(), Selected = x.UserId == Html.GetUserProfile().UserId });
//var complexitySelectList = SelectListHelper.GetSelectItems(ViewBag.StandardItems as List<TaskStandardItem>, "ItemName", "ItemId");
//var taskType = Model == null ? TaskKeys.ProjectTaskType : Model.TaskType;


}

<style>
	.dropzonePop {
		display: none;
	}
</style>


<div class="row" style="margin-top:20px;margin-bottom:20px;">
	<a class="btn btn-lg btn-danger col-md-1 col-md-offset-1" href="@Url.Action("List","TaskV2")">返回</a>
	<div class="col-md-4">
		<h5>任务ID - 优先级 - 项目名称 - 任务名称</h5>
	</div>

	<div class="buttons col-md-4">
		<a class="btn btn-info">分解任务</a>
		<a class="btn btn-warning">修改</a>
		<a class="btn btn-primary">删除</a>
	</div>
</div>
<div class="row">

	<!-- widget -->
	<div class="widget details col-md-7 col-md-offset-1">

		<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone file"></form>

		<form id="taskForm" class="form-horizontal" action="@Url.Action("EditDetail","TaskV2")" role="form" data-after-success="afterDialogSuccess()" style="">

			<div class="widget-content">

				<div class="row editTaskInfo">
					@Html.HiddenFor(t => t.Projectid)
					@Html.HiddenFor(t => t.SortId)
					@Html.HiddenFor(t => t.TaskId)
					@Html.HiddenFor(t => t.ParentId)
					@Html.HiddenFor(t => t.IsParent)

					<div class="form-group">
						@Html.LabelFor(t => t.TaskName, new { @class = "control-label col-md-2" })
						<div class="col-md-9">
							@Html.Label(Model.TaskName, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.TaskStatus, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.Status, new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.CreateDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.CreateDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.Label("关闭日期", new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.RealEndDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.StartDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.StartDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.EndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EndDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.EstimateWorkHours, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(Model.EstimateWorkHours.ToString(), new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.RealStartDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.RealStartDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.RealEndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.RealEndDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.WorkHours, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(Model.WorkHours.ToString(), new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.Manager, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(Model.Manager, new { @class = "form-control" })
						</div>
					</div>

					<hr />


					<div class="col-md-12">
						@Html.LabelFor(t => t.Description, new { @class = "control-label" })
						<p></p>
						@Html.TextAreaFor(t => t.Description, 12, 2, new { @class = "form-control" })
					</div>

					<div class="col-md-12">
						@Html.Label("附件", new { @class = "control-label" })
						<p></p>
						<div class="alert alert-info alert-dismissable">
						</div>
					</div>

				</div>

			</div>

		</form>


	</div>

	<div class="widget col-md-3" style="margin-left:20px;">
		<div style="margin-top:10px;margin-bottom:10px;">子任务</div>
		<table id="childTaskgrid" class="table table-striped table-hover table-dark-header">
			<thead>
				<tr>
					<th data-column-id="">ID</th>
					<th data-column-id="TaskName">任务名称</th>
					<th data-column-id="">指派给</th>
					<th data-column-id="">状态</th>
				</tr>
			</thead>
		</table>

	</div>


	<div class="widget col-md-7 col-md-offset-1">
		<div class="widget-content row">
			@Html.Label("历史记录", new { @class = "control-label col-md-12" })
			<div class="col-md-12">
				@Html.TextArea("logs", "logs", 6, 2, new { @class = "form-control" })
			</div>
		</div>
	</div>


</div>
@section Scripts{
	<script>

		$(function () {

			$('#childTaskgrid').bootgrid(getGridOptions())
				.on('loaded.rs.jquery.bootgrid', function () {
					$('.search,.actions').hide();
				});

		});


		function getGlobalRequest() {
			return {
				parentId: '@Model.TaskId'
			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: '@Url.Action("GetChildTasks", "TaskV2")',

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },

				formatters: {
				},
			});
		}


	</script>
}