@model WorkTask
@{
	var users = ViewBag.Users as List<UserInfo>;
	var manager =users.Find(x => x.UserId == Model.ManagerId);
	var attahcments = ViewBag.Attahcments as List<Attachment>;
}

<style>
	.dropzonePop {
		display: none;
	}
</style>

@section Css{
	<link href="~/assets/plugins/jquery.searchableSelect/css/jquery.searchableSelect.css" rel="stylesheet" />
}

<div class="row" style="margin-top:20px;margin-bottom:20px;">
	<a class="btn btn-lg btn-danger col-md-1 col-md-offset-1" href="@Url.Action("List","TaskV2")">返回</a>
	<div class="col-md-4">
		<h5>@Model.SortId - @Model.V2LevelTitle - @Model.ProjectName - @Model.TaskName</h5>
	</div>

	<div class="buttons col-md-4">

		@if (Html.GetUserProfile().UserId == Model.ManagerId)
		{
		<button class="btn btn-info  col-lg-offset-1 @(!Model.IsParent? "hidden":"")" data-toggle="ajax-modal" data-url="@Url.Action("AddSubTask", "TaskV2", new { parentId = Model.TaskId, projectId = Model.Projectid })" data-target="#firstModal"><i class="fa fa-plus-square"></i>分解任务</button>
		<a class="btn btn-warning " href="@Url.Action("Edit", "TaskV2", new { id = Model.TaskId })">修改</a>
		}
	</div>
</div>
<div class="row">

	<!-- widget -->
	<div class="widget details col-md-7 col-md-offset-1">

		<form action="@Url.Action("UploadFile", "Attachment")" class="dropzone file"></form>

		<form id="taskForm" class="form-horizontal" action="@Url.Action("EditDetail","TaskV2")" role="form" data-after-success="afterDialogSuccess()" style="">

			<div class="widget-content">

				<div class="row editTaskInfo">
					@Html.HiddenFor(t => t.Projectid)
					@Html.HiddenFor(t => t.SortId)
					@Html.HiddenFor(t => t.TaskId)
					@Html.HiddenFor(t => t.ParentId)
					@Html.HiddenFor(t => t.IsParent)

					<div class="form-group">
						@Html.LabelFor(t => t.TaskName, new { @class = "control-label col-md-2" })
						<div class="col-md-9">
							@Html.Label(Model.TaskName, new { @class = "form-control" })
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.TaskStatus, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.Status, new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.CreateDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.CreateDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.Label("关闭日期", new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@if (Model.CloseDate <= DateTime.MinValue)
							{
								@Html.Label(" ", new { @class = "form-control" })
							}
							else
							{
								@Html.Label(Model.CloseDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
							}
						</div>
					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.StartDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.StartDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.EndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EndDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
						</div>

						@Html.LabelFor(t => t.EstimateWorkHours, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(Model.EstimateWorkHours.ToString(), new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.RealStartDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@if (Model.RealStartDate <= DateTime.MinValue)
							{
								@Html.Label(" ", new { @class = "form-control" })
							}
							else
							{
								@Html.Label(Model.RealStartDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
							}
						</div>

						@Html.LabelFor(t => t.RealEndDate, new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@if (Model.RealEndDate <= DateTime.MinValue)
							{
								@Html.Label(" ", new { @class = "form-control" })
							}
							else
							{
								@Html.Label(Model.RealEndDate.ToString("yyyy-MM-dd"), new { @class = "form-control" })
							}
						</div>

						@Html.LabelFor(t => t.WorkHours, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(Model.WorkHours.ToString(), new { @class = "form-control" })
						</div>

					</div>

					<div class="form-group">
						@Html.LabelFor(t => t.Manager, new { @class = "control-label col-md-2 text-align:left" })
						<div class="col-md-2">
							@Html.Label(manager?.UserName, new { @class = "form-control" })
						</div>

						@Html.Label("预估消耗", new { @class = "control-label col-md-2" })
						<div class="col-md-2">
							@Html.Label(Model.EstimateWorkHours.ToString(), new { @class = "form-control" })
						</div>
					</div>


					@foreach (var item in ViewBag.SubTasks as List<WorkTask>)
					{
						<div class="form-group">
							@Html.Label("执行人", new { @class = "control-label col-md-2" })
							<div class="col-md-2">
								@Html.Label(users.Find(x=>x.UserId==item.ManagerId).UserName,new { @class = "form-control" } )
							</div>

							@Html.Label("预估消耗", new { @class = "control-label col-md-2" })
							<div class="col-md-2">
								@Html.Label(item.EstimateWorkHours.ToString(), new { @class = "form-control" })
							</div>

							@Html.Label("实际消耗", new { @class = "control-label col-md-2" })
							<div class="col-md-2">
								@Html.Label(item.WorkHours.ToString(), new { @class = "form-control" })
							</div>

						</div>
					}

					<hr />

					<div class="col-md-12">
						@Html.LabelFor(t => t.Description, new { @class = "control-label"  })
						<p></p>
						@Html.TextAreaFor(t => t.Description, 12, 2, new { @class = "form-control", @readonly = "readonly" })
					</div>

					<div class="col-md-12">
						@Html.Label("附件", new { @class = "control-label" })
						<p></p>
						<div class="alert alert-info alert-dismissable">
							@foreach (var item in attahcments)
							{
								<div><a href="@item.Url">@item.RealName</a></div>
							}
						</div>
					</div>

				</div>

			</div>

		</form>


	</div>

	@Html.Partial("_subTaskList")


	<div class="widget col-md-7 col-md-offset-1">
		<div class="widget-content row">
			@Html.Label("历史记录", new { @class = "control-label col-md-12" })
			<div class="col-md-12">
				@Html.TextArea("logs", "logs", 6, 2, new { @class = "form-control", @readonly = "readonly" })
			</div>
		</div>
	</div>


</div>
@section Plugins{
	<script src="~/assets/plugins/jquery.searchableSelect/js/jquery.searchableSelect.js"></script>
}
@section Modals{
	<button class="btn btn-md btn-custom-primary hidden" id="modelProxy" data-toggle="ajax-modal" data-target="#firstModal">代理</button>
	<!-- Modal start -->
	<div class="modal fade" id="firstModal" tabindex="-1" role="dialog" aria-labelledby="firstModalLabel" aria-hidden="true">
	</div>
	<!-- Modal end -->
}
@section Scripts{
	<script>

		$(function () {

			$('#childTaskgrid').bootgrid(getGridOptions())
				.on('loaded.rs.jquery.bootgrid', function () {
					$('.search,.actions').hide();
				});

		});


		function getGlobalRequest() {
			return {
				parentId: '@Model.TaskId'
			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: '@Url.Action("GetChildTasks", "TaskV2")',

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },

				formatters: {
				},
			});
		}


	</script>
}