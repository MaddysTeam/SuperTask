
@{
	var pageTitle = ViewBag.Title = "项目文件";
	Layout = "~/Views/Shared/_Layout.cshtml";

	var projectId = Request["projectId"];
	var resource = ViewBag.CurrentResource as Resource;
	var isLeader = resource.IsLeader();

	var submenu = MenuHelper.GetProjectMenuItems(projectId.ToGuid(Guid.Empty), Html.GetUserProfile().UserId, MenuHelper.ProjectFilePageCode);
}

<div class="content-wrapper">

	@*<div class="main-header">
		<h3><i class="fa fa-tasks"></i> @pageTitle</h3>
		<em></em>
	</div>*@
	<div class="main-content">

		@Html.Partial("_subMenu", submenu)

		<div class="row">

			<div class="col-md-2">

				<!-- widget -->
				<div class="widget widget-treeview">
					<div class="widget-content">
						<div id="treeview-declare"></div>
					</div>
				</div>
				<!-- /widget -->

			</div>

			<div class="col-md-10">

				<!-- widget -->
				<div class="widget">
					@*<div class="widget-header">
				<h3><i class="fa fa-paperclip"></i> @pageTitle</h3>

			</div>*@
					<div class="widget-content">
						<!-- Grid -->
						<div class="table-responsive">
							<table id="bootgrid" class="table table-striped table-hover table-dark-header">
								<thead>
									<tr>
										<th data-column-id="fileName">附件名称</th>
										<th data-column-id="filePath">附件路径</th>
										<th data-column-id="projectName">所属项目</th>
										<th data-column-id="taskName">所属任务</th>
										<th data-column-id="uploadUser">上传者</th>
										<th data-column-id="uploadDate" data-formatter="DateOnly">上传时间</th>
										<th data-column-id="commands" data-formatter="commands" data-sortable="false" data-header-Css-Class="width130">操作</th>
									</tr>
								</thead>
							</table>
						</div>
					</div>
					<!-- /widget content -->
				</div>
				<!-- /widget -->

			</div>

		</div>

		<input type="hidden" class="taskFileType" id="taskFileType" value="@TaskKeys.DefaultFileType" />
	</div>
</div>
@section Plugins{
<script src="~/assets/js/jstree.min.js"></script>
}
@section Scripts {
	<script>
		function getGlobalRequest() {
			return {
				projectId: '@projectId',
				taskFileTypeId: $('#taskFileType').val(),

			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: window.location.href,

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },

				formatters: {
					'commands': function (column, row) {
						var id = row.id;
						var isHeader = '@resource.IsHeader()' == 'True';
						if (isHeader)
							return '<div class="btn-group btn-group-xs pull-right"  data-row-id="' + row.id + '" data-row-active="' + row.actived + '">' +
													 '<a class="btn btn-lg btn-success btn-download" target="_blank" href="' + row.filePath + '">下载</a> ' +
													 '<button class="btn btn-lg btn-danger btn-delete">删除</button> ' +
													 '</div>';
						else
							return '<div class="btn-group btn-group-xs pull-right"  data-row-id="' + row.id + '" data-row-active="' + row.actived + '">' +
												 '<a class="btn btn-lg btn-success btn-download" target="_blank" href="' + row.filePath + '">下载</a> ' +
                                     '</div>';
					},
				},
			});
		}

		$(function () {

			$('#bootgrid').bootgrid(getGridOptions())
			.on('loaded.rs.jquery.bootgrid', function () {
				//TODO:click and delete project
				var delUrl = '@Url.Action("DeleteFile", "ProjectManage")';
				$(this).find('.btn-delete').on('click', function (e) {

					if (confirm('@Confirm.Project.File_CONFIRM_DELETE')) {
						var id = $(this).parent().data('rowId');
						$.post(delUrl, { fileId: id }, function (data) {
							popupMessage(data, {
								success: function () {
									$('#bootgrid').bootgrid('reload');
								}
							});
						});
					}
					else
						return false;
				});
			});


			//left tree load

			var lastNode;
			function loadFrag(cond) {
				var param;
				if (cond) { param = cond; }
				else { param = { key: lastNode.id }; }
				//change bootgrid params and reload again
				$('#taskFileType').val(param.key);
				$('#bootgrid').bootgrid('reload');
			}

			var $treeviewApp = $('#treeview-declare');

			$treeviewApp.jstree({
				'core': {
					'data': {
						'url': '/Json/GetFolder'
					},
					'check_callback': true,
				},
				'plugins': ['contextmenu', 'types'],
				'types': {
					'root': {
						'icon': 'fa fa-desktop'
					},
					'default': {
						'icon': 'fa fa-folder yellow-font'
					},
					'database': {
						'icon': 'fa fa-database yellow-font'
					},
					'table': {
						'icon': 'fa fa-table green-font'
					},
					'view': {
						'icon': 'fa fa-search text-primary'
					},
					'procedure': {
						'icon': 'fa fa-play-circle green-font'
					},
					'key': {
						'icon': 'fa fa-key text-primary'
					},
					'folder': {
						'icon': 'fa fa-folder yellow-font'
					},
					'content': {
						'icon': 'fa fa-pencil-square-o text-primary'
					},
					'active': {
						'icon': 'fa fa-table green-font'
					},
				}

			}).on('loaded.jstree', function () {
				//treeviewApp.jstree('open_all');
				//treeviewApp.jstree('open_node', '#root');
			}).on('changed.jstree', function (e, data) {
				lastNode = data.instance.get_node(data.selected);
				loadFrag();
			})

			$treeviewApp.parent().parent().show();

		});
	</script>
}