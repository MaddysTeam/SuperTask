@model Project
@{
	var submenu = MenuHelper.GetProjectMenuItems(Model.ProjectId, Html.GetUserProfile().UserId, MenuHelper.ProjectMainPageCode);
}
@section Css{
	<link href="~/assets/plugins/jquery.searchableSelect/css/jquery.searchableSelect.css" rel="stylesheet" />
}
<div class="content-wrapper">
	@Html.Partial("_subMenu", submenu)
	<div class="details">
		@Html.Partial("_details", Model)
	</div>
</div>
@section Modals{
	<button class="btn btn-md btn-custom-primary hidden" id="modelProxy" data-toggle="ajax-modal" data-target="#firstModal">代理</button>
	<!-- Modal start -->
	<div class="modal" id="firstModal" tabindex="-1" role="dialog" aria-labelledby="firstModalLabel" aria-hidden="true">
	</div>
	<!-- Modal end -->
}
@section Plugins{
	<script src="~/assets/plugins/jquery.searchableSelect/js/jquery.searchableSelect.js"></script>
}
@section Scripts{
	<script>

		function afterSubmitSuccess() { }

		function getGlobalRequest() {
			return {
				projectId: '@Model.ProjectId'
			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: '@Url.Action("List", "ProjectStoneTask")',

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },
			});
		}

		function bindPay(func) {
			$('.btn-pay,.btn-confirm-pay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payType = $payContainer.find('#PayType').val();
				var resourceId = $payContainer.find('#ResourceId').val();
				var payments = {
					PayId: $payContainer.find('#PayId').val(),
					Money: $payContainer.find('#Money').val(),
					ProjectId: $payContainer.find('#ProjectId').val(),
					InvoiceDate: $payContainer.find('#InvoiceDate').val(),
					PayDate: $payContainer.find('#PayDate').val(),
					PayName: $payContainer.find('#PayName').val(),
					resourceId: resourceId,
					Sort: $payContainer.find('#Sort').val(),
					PayType: payType == null || payType == '' ? $payContainer.find('.resource_' + resourceId + ':checked').val() : payType,
					IsConfirm: $this.data('confirm') == true,
					ParentId: $payContainer.find('#ParentId').val(),
					Content: $payContainer.find('#Content').val()
				}

				$.post('@Url.Action("Edit", "Payments")', { payments: payments }, function (data) {
					if (func) func();
					popupMessage(data);
					if ($this.hasClass('btn-confirm-pay') && data.result=='@AjaxResults.Success') {
						$this.remove();
						$payContainer.find('.btn-clear').hide();
						$payContainer.find('.btn-pay').hide();
						$payContainer.find('input').attr('disabled','disabled');
					}
					else {
						$payContainer.find('.btn-clear').show();
					}
					$payContainer.find('#Ratio').html(data.payments.Ratio);
				});
			});
		}

		function bindRemoveVender(func) {
			$('.btn-removePay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payId = $payContainer.find('.payId').val();
				if (payId == '' || payId == '@Guid.Empty') {
					$payContainer.remove();
				}
				else {
					$.post('@Url.Action("Remove", "Payments")', { id: payId }, function (data) {
						if (func) func();
						popupMessage(data);
						$payContainer.remove();
					})
				}
			});
		}

		function bindClarePayment(func) {
			$('.btn-clear').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payId = $payContainer.find('.payId').val();
				var projectId = '@Model.ProjectId';
				$.post('@Url.Action("Clare", "Payments")', { id: payId, projectId: projectId }, function (data) {
					popupMessage(data);
					if (func) func();
					$this.hide();
					$payContainer.find('#Money').val(0);
					$payContainer.find('#Ratio').html("0");
				})
			});
		}

		function bindAddVender(func) {
			$('.btn-addVender').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $('#venderList');
				var paymentId = $this.data('id');
				var url = '@Url.Action("CreateTempVenderPayment", "Payments")?id=' + paymentId + '&projectId='+'@Model.ProjectId';
				$.post(url, function (html) {
					if (!paymentId)
						$payContainer.append($(html));
					else
						$('.' + paymentId).after($(html));
					bindAddVender(func);
					bindPay(func);
					bindRemoveVender(func);
				});

			});
		}


		$(function () {

			ajaxSubmitForm($('form'));

			var projectId = '@Model.ProjectId';

			@*$('.btn-review').on('click', function () {
				alert();
				$('#modelProxy').data('url', '@Url.Action("ReviewRequest","Project")').trggier('click');
			})*@

			$('.btn-forceClose').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_FORCE_CLOSE')) {
					$('#ProjectStatus').val('@ProjectKeys.ForceCloseStatus');
				}
			});

			$('.btn-complete').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_CONFIRM_COMPLETE')) {
					$('#ProjectStatus').val('@ProjectKeys.CompleteStatus');
				}
				else
					return false;
			});

			// load stone task grid
			var grid = $('#bootgrid');
			grid.bootgrid(getGridOptions());

			// load stone list
			$.post('@Url.Action("List", "ProjectMileStone")', { projectId: projectId }, function (data) {
				$('#tab1').html(data);

				$('.btn-removeStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var pmsId = $stoneContainer.find('#PmsId').val();
					$.post('@Url.Action("Remove", "ProjectMileStone")', { id: pmsId }, function () {
						$this.parent().parent().remove();
						grid.bootgrid('reload');
					});
				});

				$('.btn-editStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var projectMileStone = {
						PmsId: $stoneContainer.find('#PmsId').val(),
						StoneId: $stoneContainer.find('#StoneId').val(),
						Projectid: projectId,
						FolderId: $stoneContainer.find('#FolderId').val(),
						Status: $stoneContainer.find('#Status').val(),
						Content: $stoneContainer.find('#Content').val(),
						StartDate: $stoneContainer.find('#StartDate').val(),
						EndDate: $stoneContainer.find('#EndDate').val(),
					}

					$.post('@Url.Action("Edit", "ProjectMileStone")', { projectMileStone: projectMileStone }, function (data) {
						popupMessage(data);
						grid.bootgrid('reload');
					});
				});

			});


			// load project payments
			var currentTabId = 'moneyTab';
			loadPayments(currentTabId);

			// load submit review
			$.post('@Url.Action("SubmitReview", "Project")', { id: projectId }, function (data) {
				$('#reviewArea').html(data);
			})

	
			function loadPayments(currentTabId) {
				$.post('@Url.Action("Details", "Payments")', { projectId: projectId, tabId: currentTabId }, function (data) {
					$('#paymentsArea').html(data);

					// save current tabId to aviod it being change after loading payments
					$('.nav-tabs li a').off('click').on('click', function () { currentTabId = $(this).attr('href').replace('#', ''); });

					// call back
					var callback = function () { grid.bootgrid('reload'); };
					// bind payment
					bindPay(callback);
					// bind remove payment
					bindRemoveVender(callback);
					// bind clear payment
					bindClarePayment(callback);
					// add vender payment by ajax
					bindAddVender(callback);

					$('.btn-emoney').off('click').on('click', function () {
						var money = $('#EsitimateMoney').val();
						$.post('@Url.Action("EditEestimateMoney", "Project")', { id: projectId, emoney: money }, function (data) {
							callback();
							popupMessage(data);
						})
					});

					$('.btn-cmoney').off('click').on('click', function () {
						var money = $('#ContractMoney').val();
						$.post('@Url.Action("EditConstractMoney", "Project")', { id: projectId, cmoney: money }, function (data) {
							loadPayments(currentTabId);
							popupMessage(data);
						})
					});

					$('.btn-clear').each(function () {
						var $this = $(this);
						var $payContainer = $this.parents('.form-group');
						var money = $payContainer.find('#Money').val();
						if (money <= 0)
							$this.hide();
					})

				});
			}

		});


	</script>
}	