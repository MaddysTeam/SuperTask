@model Project
@{
	var submenu = MenuHelper.GetProjectMenuItems(Model.ProjectId, Html.GetUserProfile().UserId, MenuHelper.ProjectMainPageCode);
}
@section Css{
	<link href="~/assets/plugins/jquery.searchableSelect/css/jquery.searchableSelect.css" rel="stylesheet" />
}
<div class="content-wrapper">
	@Html.Partial("_subMenu", submenu)
	<div class="details">
		@Html.Partial("_details", Model)
	</div>
</div>
@section Modals{
	<button class="btn btn-md btn-custom-primary hidden" id="modelProxy" data-toggle="ajax-modal" data-target="#firstModal">代理</button>
	<!-- Modal start -->
	<div class="modal" id="firstModal" tabindex="-1" role="dialog" aria-labelledby="firstModalLabel" aria-hidden="true">
	</div>
	<!-- Modal end -->
}
@section Plugins{
	<script src="~/assets/plugins/jquery.searchableSelect/js/jquery.searchableSelect.js"></script>
}
@section Scripts{
	<script>

		var stoneTaskEditReviewType = '@ReviewKeys.ReviewTypeForStoneTaskChanged'; // 节点任务-编辑审核类型id
		var stoneTaskSubmitReviewType = '@ReviewKeys.ReviewTypeForStoneTaskSubmit';

		function afterSubmitSuccess() {
			//location.href = location.href;
		}

		function getGlobalRequest() {
			return {
				projectId: '@Model.ProjectId'
			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: '@Url.Action("List", "ProjectStoneTask")',

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },

				@*formatters: {
					'commands': function (column, row) {
						var id = row.id;
						var hasStone = row.hasStone;
						var isProcessStatus = row.statusId == '@TaskKeys.ProcessStatus';
						var isPlanStatus = row.statusId == '@TaskKeys.PlanStatus';
						var isReviewStaus = row.statusId == '@TaskKeys.ReviewStatus';
						var isTempEditStatus = row.statusId == '@TaskKeys.TaskTempEditStatus';
						var isCompleteStatus = row.statusId == '@TaskKeys.CompleteStatus';

						var buttons = '<div class="btn-group btn-group-xs pull-right" data-name="' + row.projectName + '" data-row-id="' + row.id + '" data-row-active="' + row.actived + '">';
						if (isPlanStatus) {
							buttons += '<button class="btn btn-lg btn-success btn-edit">编辑</button>';
						}
						else if (isProcessStatus) {
							buttons += '<a class="btn btn-lg btn-warning btn-requst" href="@Url.Action("ReviewRequest", "ProjectStoneTask")?id=' + row.id + '&reviewType=' + stoneTaskEditReviewType + '">申请修改</a> ' +
										  '<a class="btn btn-lg btn-info btn-requst" href="@Url.Action("ReviewRequest", "ProjectStoneTask")?id=' + row.id + '&reviewType=' + stoneTaskSubmitReviewType + '">申请提交</a> ';
						}
						else if (isReviewStaus) {
							buttons += '<button disabled>审核中</button>';
						}
						else if (isTempEditStatus) {
							buttons += '<button class="btn btn-lg btn-success btn-edit">临时修改</button>';
						}
						else if (isCompleteStatus) {
							buttons += '<button class="btn btn-success" disabled>已完成</button>';
						}
						buttons += '</div>';
						return buttons;
					},
				},*@
			});
		}

		function bindPay(func) {
			$('.btn-pay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payType = $payContainer.find('#PayType').val();
				var resourceId = $payContainer.find('#ResourceId').val();
				var payments = {
					PayId: $payContainer.find('#PayId').val(),
					Money: $payContainer.find('#Money').val(),
					ProjectId: $payContainer.find('#ProjectId').val(),
					InvoiceDate: $payContainer.find('#InvoiceDate').val(),
					PayDate: $payContainer.find('#PayDate').val(),
					PayName: $payContainer.find('#PayName').val(),
					resourceId: resourceId,
					Sort: $payContainer.find('#Sort').val(),
					PayType: payType == null || payType == '' ? $payContainer.find('.resource_' + resourceId + ':checked').val() : payType,
				}

				$.post('@Url.Action("Edit", "Payments")', { payments: payments }, function (data) {
					popupMessage(data);
					if (func) func();
				});
			});
		}

		function bindRemovePay(func) {
			$('.btn-removePay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payId = $payContainer.find('.payId').val();
				if (payId == '' || payId == '@Guid.Empty') {
					$payContainer.remove();
				}
				else {
					$.post('@Url.Action("Remove", "Payments")', { id: payId }, function (data) {
						popupMessage(data);

						if (func) func();
					})
				}
			});
		}

		function bindClarePayment(func) {
			$('.btn-clear').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payId = $payContainer.find('.payId').val();
				var projectId = '@Model.ProjectId';
				$.post('@Url.Action("Clare", "Payments")', { id: payId, projectId: projectId }, function (data) {
					popupMessage(data);
					if (func) func();
				})
			});
		}


		$(function () {
			var isProcessStatus = '@Model.IsProcessStatus' == 'True';
			var IsPlanStatus = '@Model.IsPlanStatus' == "True";
			var isEditStatus = '@Model.IsEditStatus' == "True";

			ajaxSubmitForm($('form'));

			var projectId = '@Model.ProjectId';

			$('.btn-start').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_CONFIRM_START')) {
					$('#ProjectStatus').val('@ProjectKeys.ProcessStatus');
				}
				else {
					return false;
				}
			});

			$('.btn-forceClose').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_FORCE_CLOSE')) {
					$('#ProjectStatus').val('@ProjectKeys.ForceCloseStatus');
				}
			});

			$('.btn-save').on('click', function () {
				var status = $('#ProjectStatus').val();
				if (status == '@ProjectKeys.EditStatus') { // 如果是编辑状态，则保存后默认改为执行状态
					$('#ProjectStatus').val('@ProjectKeys.ProcessStatus');
				}
			});

			$('.btn-complete').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_CONFIRM_COMPLETE')) {
					$('#ProjectStatus').val('@ProjectKeys.CompleteStatus');
				}
				else
					return false;
			});



			// load stone task grid
			var grid = $('#bootgrid');
			grid.bootgrid(getGridOptions())
			.on('loaded.rs.jquery.bootgrid', function () {

				//grid.find('.btn-edit').on('click', function () {
				//	var id = $(this).parent().data('rowId');
				//	var $proxy = $('#modelProxy');
				//	$proxy
				//		.data('url', '/ProjectStoneTask/Edit/' + id)
				//		.trigger('click');
				//});

			});

			// load stone list
			$.post('@Url.Action("List", "ProjectMileStone")', { projectId: projectId }, function (data) {
				$('#tab1').html(data);
				if (!IsPlanStatus) {
					$('#tab1').find('input,textarea').attr('readonly', 'readonly');
					$('#tab1').find('button,a').remove();
				}

				$('.btn-removeStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var pmsId = $stoneContainer.find('#PmsId').val();
					$.post('@Url.Action("Remove", "ProjectMileStone")', { id: pmsId }, function () {
						$this.parent().parent().remove();
						grid.bootgrid('reload');
					});
				});

				$('.btn-editStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var projectMileStone = {
						PmsId: $stoneContainer.find('#PmsId').val(),
						StoneId: $stoneContainer.find('#StoneId').val(),
						Projectid: projectId,
						FolderId: $stoneContainer.find('#FolderId').val(),
						Status: $stoneContainer.find('#Status').val(),
						Content: $stoneContainer.find('#Content').val()
					}

					$.post('@Url.Action("Edit", "ProjectMileStone")', { projectMileStone: projectMileStone }, function (data) {
						popupMessage(data);
						grid.bootgrid('reload');
					});
				});

			});

			
			// load project payments
			var currentTabId = 'moneyTab';
			loadPayments(currentTabId);

			function loadPayments(currentTabId) {
				$.post('@Url.Action("Details", "Payments")', { projectId: projectId, tabId: currentTabId }, function (data) {
					$('#paymentsArea').html(data);

					if (!IsPlanStatus) {
						$('#paymentsArea').find('input,textarea').attr('readonly', 'readonly');
						$('#paymentsArea .widget-content').find('button,a').remove();
					}

					// save current tabId to aviod it being change after loading payments 
					$('.nav-tabs li a').click(function () { currentTabId = $(this).attr('href').replace('#', ''); });

					// call back 
					var callback = function () { grid.bootgrid('reload'); loadPayments(currentTabId); };
					// bind payment
					bindPay(callback);
					// bind remove payment
					bindRemovePay(callback);
					// bind clear payment
					bindClarePayment(callback);
					// add vender payment by ajax
					$('.btn-addVender').off('click').on('click', function () {
						var $this = $(this);
						var $payContainer = $('#venderList');
						$.post('@Url.Action("CreateTempVenderPayment", "Payments")?id=' + projectId, function (html) {
							$payContainer.append($(html));
							bindPay(callback);
							bindRemovePay(callback);
						});
					});

					$('.btn-money').on('click', function () {
						var money = $('#TotalMoney').val();
						$.post('@Url.Action("EditMoney","Project")', { id: projectId, money: money }, function (data) {
							popupMessage(data);
						})
					});

				});
			}

		});


	</script>
}	