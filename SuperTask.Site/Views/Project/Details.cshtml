@model Project
@{
	//Layout = "~/Views/Shared/_Layout.cshtml";
	//var pageTitle = "项目明细";
	//var projectId = Request["projectId"];
	//var resource = ViewBag.CurrentResource as Resource;
	//var isLeader = resource.IsLeader();
	var submenu = MenuHelper.GetProjectMenuItems(Model.ProjectId, Html.GetUserProfile().UserId, MenuHelper.ProjectMainPageCode);

}
@section Css{
	<link href="~/assets/plugins/jquery.searchableSelect/css/jquery.searchableSelect.css" rel="stylesheet" />
}
<div class="content-wrapper">
	@Html.Partial("_subMenu", submenu)
	<div class="details">
		@Html.Partial("_details", Model)
	</div>
</div>
@section Modals{
	<button class="btn btn-md btn-custom-primary hidden" id="modelProxy" data-toggle="ajax-modal" data-target="#firstModal">代理</button>
	<!-- Modal start -->
	<div class="modal" id="firstModal" tabindex="-1" role="dialog" aria-labelledby="firstModalLabel" aria-hidden="true">
	</div>
	<!-- Modal end -->
}
@section Plugins{
	<script src="~/assets/plugins/jquery.searchableSelect/js/jquery.searchableSelect.js"></script>
}
@section Scripts{
	<script>
		function getGlobalRequest() {
			return {
				projectId: '@Model.ProjectId'
			};
		}

		function getGridOptions() {
			return $.extend(true, {}, gridOptions, {

				url: '@Url.Action("List", "ProjectStoneTask")',

				requestHandler: function (request) { return $.extend(true, request, getGlobalRequest()); },

				formatters: {
					'commands': function (column, row) {
						var id = row.id;
						var hasStone = row.hasStone;
						var buttons = '<div class="btn-group btn-group-xs pull-right" data-name="' + row.projectName + '" data-row-id="' + row.id + '" data-row-active="' + row.actived + '">' +
												'<button class="btn btn-lg btn-success btn-edit">编辑</button> ' +
												'<button class="btn btn-lg btn-warning btn-requst">申请修改</button> ' +
												'<button class="btn btn-lg btn-info btn-requst">申请提交</button> ';
						if (hasStone)
							buttons += '<button class="btn btn-lg btn-danger btn-delete">删除</button> ';
						buttons+='</div>';
						
						return buttons;
					},
				},
			});
		}

		$(function () {
			var grid = $('#bootgrid');
			grid.bootgrid(getGridOptions())
			.on('loaded.rs.jquery.bootgrid', function () {

				grid.find('.btn-edit').on('click', function () {
					var id = $(this).parent().data('rowId');
					var $proxy = $('#modelProxy');
					$proxy
						.data('url', '/ProjectStoneTask/Edit/' + id)
						.trigger('click');
				});

			});
		});
	</script>
	<script>
		function whenProcess() {
			$('.btn-modify,.projectProgress,.processName').show().removeAttr('disabled');
			$('.btn-start').hide();
			var startDate = $('.startDate'),
			endDate = $('.endDate'),
			hasStartDate = startDate.attr('hasValue') == 'True',
			hasEndDate = startDate.attr('hasValue') == 'True';
			if (!hasStartDate)
				startDate.val(new Date().Format('yyyy-MM-dd'));
			if (!hasEndDate)
				endDate.val(new Date().Format('yyyy-MM-dd'));
		}

		function whenPlan() {
			$('.btn-start').show().removeAttr('disabled');
		}

		function whenComplete() {
			$('.details button').hide();
		}

		function whenEdit() {
			$('.btn-modify,.btn-start').hide();
			$('.btn-save').show();
		}

		function whenReview() {
			whenComplete();
		}

		function afterDialogSuccess() {

		}

		function bindPay() {
			$('.btn-pay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payType = $payContainer.find('#PayType').val();
				var resourceId = $payContainer.find('#ResourceId').val();
				var payments = {
					PayId: $payContainer.find('#PayId').val(),
					Money: $payContainer.find('#Money').val(),
					ProjectId: $payContainer.find('#ProjectId').val(),
					InvoiceDate: $payContainer.find('#InvoiceDate').val(),
					PayDate: $payContainer.find('#PayDate').val(),
					PayName: $payContainer.find('#PayName').val(),
					resourceId:resourceId,
					PayType: payType == null || payType == '' ? $payContainer.find('.resource_' + resourceId + ':checked').val() : payType,
				}

				$.post('@Url.Action("Edit", "Payments")', { payments: payments }, function (data) {
					popupMessage(data);
				});
			});
		}

		function bindRemovePay() {
			$('.btn-removePay').off('click').on('click', function () {
				var $this = $(this);
				var $payContainer = $this.parents('.form-group');
				var payId = $payContainer.find('.payId').val();
				if (payId == '' || payid == '@Guid.Empty') {
					$payContainer.remove();
				}
				else {
					$.post('@Url.Action("Remove", "Payments")', { id: payId }, function (data) {
						popupMessage(data);
					})
				}
			});
		}


		$(function () {

			ajaxSubmitForm($('form'));

			var projectId = '@Model.ProjectId';
			var isPlanStatus = '@Model.IsPlanStatus' == 'True';
			var isProcessStatus = '@Model.IsProcessStatus' == 'True';
			var isCompleteStatus = '@Model.IsCompleteStatus' == 'True';
			var isEditStatus = '@Model.IsEditStatus' == 'True';
			var isReviewStatus = '@Model.IsReviewStatus' == 'True';

			if (isPlanStatus) whenPlan();
			else if (isCompleteStatus) whenComplete();
			else if (isProcessStatus) whenProcess();
			else if (isEditStatus) whenEdit();
			else if (isReviewStatus) whenReview();

			$('.btn-start').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_CONFIRM_START')) {
					$('#ProjectStatus').val('@ProjectKeys.ProcessStatus');
				}
				else {
					return false;
				}
			});

			$('.btn-forceClose').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_FORCE_CLOSE')) {
					$('#ProjectStatus').val('@ProjectKeys.ForceCloseStatus');
				}
			});

			$('.btn-save').on('click', function () {
				var status = $('#ProjectStatus').val();
				if (status == '@ProjectKeys.EditStatus') { // 如果是编辑状态，则保存后默认改为执行状态
					$('#ProjectStatus').val('@ProjectKeys.ProcessStatus');
				}
			});

			$('.btn-complete').on('click', function () {
				if (confirm('@Confirm.Project.PROJECT_CONFIRM_COMPLETE')) {
					$('#ProjectStatus').val('@ProjectKeys.CompleteStatus');
				}
				else
					return false;
			});

			// load stone list
			$.post('@Url.Action("List", "ProjectMileStone")', { projectId: projectId }, function (data) {
				$('#tab1').html(data);
				$('.btn-removeStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var stoneId = $stoneContainer.find('.stoneId').val();
					$.post('@Url.Action("Remove", "ProjectMileStone")', { projectId: projectId, mileStoneId: stoneId }, function () {
						alert('remove success');
						$this.parent().parent().remove();
					});
				});

				$('.btn-editStone').on('click', function () {
					var $this = $(this);
					var $stoneContainer = $this.parents('.form-group');
					var projectMileStone = {
						PmsId: $stoneContainer.find('.pmsId').val(),
						StoneId: $stoneContainer.find('.stoneId').val(),
						Projectid: projectId,
						FolderId: $stoneContainer.find('.folderId').val(),
						Status: $stoneContainer.find('.stoneStatus').val(),
						Content: $stoneContainer.find('.stoneContent').val()
					}

					$.post('@Url.Action("Edit", "ProjectMileStone")', { projectMileStone: projectMileStone }, function (data) {
						popupMessage(data);
					});
				});

			});

			// load project payments
			$.post('@Url.Action("Details", "Payments")', { projectId: projectId }, function (data) {
				$('#paymentsArea').html(data);
				// bind pay
				bindPay();
				// add vender payment by ajax
				$('.btn-addInternalVender').off('click').on('click', function () {
					var $this = $(this);
					var $payContainer = $this.parents('.form-group');
					$.post('@Url.Action("CreateTempVenderPayment", "Payments")?id=' + projectId, function (html) {
						$payContainer.after($(html));
						bindPay();
						bindRemovePay();
					});
				});
			})

		});


	</script>
}	